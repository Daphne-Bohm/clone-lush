(function ($) {

  var searchTimer;

  Drupal.behaviors.lush_slideouts = {
    attach: function (context, settings) {
      $.extend({
        getUrlVars: function () {
          var vars = [], hash;
          var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
          for (var i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
          }
          return vars;
        },
        getUrlVar: function (name) {
          return $.getUrlVars()[name];
        }
      });

      $(document).bind('flagGlobalAfterLinkUpdate', function (event, data) {
        if (data.flagName == 'favourite_shop' && $('.shop-opening-times .shop-flag-message').length) {
          // Empty shop message area.
          $('.favourite_shop_message_area').hide();
          $('.favourite_shop_message_area').empty();
          // Move flag message into the message area.
          $('.shop-opening-times .shop-flag-message').appendTo('.favourite_shop_message_area');
          $('.favourite_shop_message_area').fadeIn();
        }
      });

      $(document).ready(function () {

        // Shop's Social layout on Safari fix
        $(window).load(function () {
          // Shop's Social layout on Safari fix
          if ($('#shop-social-wrapper').length) {
            $('#shop-social-wrapper').packery();
          }
        });

        $(".object-commerce-product select option:only-child").parent().attr('disabled', 'disabled').addClass('single-option');

        // to set variable to stop scrolling to top of the page when using Product Main Navigation
        $.productSubMenu = false;

        // resize funtion couse trouble on Android
        // as its trigered when scrolling ...
        $.widthW = $(window).width();

        //Search typed into
        var elem1 = $('#edit-search-filter');
        var results1 = $('.object-search-filter-dropdown-result');
        // Save current value of element
        elem1.data('oldVal', elem1.val());

        // Look for changes in the value
        elem1.bind("propertychange keyup input paste", function (event) {
          // If value has changed...
          if (elem1.data('oldVal') != elem1.val()) {
            // Updated stored value
            elem1.data('oldVal', elem1.val());
            var newVal = elem1.val();

            // Do action
            $(results1).load(Drupal.settings.basePath + Drupal.settings.pathPrefix + 'lush_help/autocomplete/' + encodeURI(newVal), function (responseText, textStatus, req) {
              // @todo trap error.
            });
            //if auto correct is not visible, show it and replace text string
            if (results1.is(':visible')) {

            }
            else {
              results1.show();
            }
          }
        });
        //Activate up and down arrows on search results
        var chosen = "";
        var search_position = '';

        $(document).keydown(function (e) { // 38-up, 40-down
          if ($('.object-search-filter-dropdown-result-list').is(":visible")) {
            var wrapper = $('.object-search-filter-dropdown-result-list');
            if (e.keyCode == 40) {
              if (chosen === "") {
                chosen = 0;
              } else if ((chosen + 1) < $('a', wrapper).length) {
                chosen++;
              }
              $('a', wrapper).removeClass('selected');
              $('a:eq(' + chosen + ')', wrapper).addClass('selected');
              return false;
            }
            if (e.keyCode == 38) {
              if (chosen === "") {
                chosen = 0;
              } else if (chosen > 0) {
                chosen--;
              }
              $('a', wrapper).removeClass('selected');
              $('a:eq(' + chosen + ')', wrapper).addClass('selected');
              return false;
            }
            //Pick up on enter click
            if (e.keyCode == 13) {
              //If there is a selected item in the search....
              if ($('a.selected', wrapper).length > 0) {
                e.preventDefault();
                window.location.href = $('a.selected', wrapper).attr('href');
              }
              return false;
            }
          }
        });

        $('.404-products-link').click(function (e) {
          $('.header-products a.products.no-link').trigger('click');
          $('li.products > p.toggle-sub-menu').trigger('click');
          e.preventDefault();
        });

        $('header.header').each(function () {
          var header = $(this);
          // Sub menu code.
          $('.header-contents a.no-link, .header-sub-menus a.no-link', header).each(function () {
            var button = $(this);
            var sub_menu = button.attr('data-header-sub-menu');
            $(button).once('submenuclick', function () {
              $(button).click(function (e) {
                // <header> tag - remove position:fixed when using Product Navigation after cancel search
                if (sub_menu == 'header-sub-menu-products') {
                  $('header').removeAttr("style");
                }
                if (button.hasClass('no-reset')) {
                  // Close if open.
                  var sub_menu_check = $('.header-sub-menus .' + sub_menu, header);
                  if (sub_menu_check.hasClass('open')) {
                    close_sub_menu(header, sub_menu);
                  }
                  else {
                    open_sub_menu(header, sub_menu);
                  }
                }
                else {
                  close_sub_menus(header, open_sub_menu, sub_menu);
                }
                e.preventDefault();
              });
            });
          });
          // Toggles in sub menus.
          $('body').once('submenutoggle', function () {
            $('.toggle-sub-menu', header).click(function (e) {
              var current_width = get_body_width();
              if (current_width >= 768) {
                // If desktop, do not do this function.
              }
              else {
                var button = $(this);
                button.toggleClass('open');
                button.toggleClass('active');
                button.siblings("ul").slideToggle(function () {
                  // class children is set for all Products subcategories
                  if ($(this).hasClass("children")) {
                    $.productSubMenu = true;
                  } else {
                    $.productSubMenu = false;
                  }
                  mobile_absolute_check();
                });
                e.preventDefault();
              }
            });
          });
          var changeHeaderPadding = function () {
            var height = $(".header").height();
            $(".header-padding").height(height);
          };

          $('.header').resize(changeHeaderPadding);
          // Search focus.
          $('input.focus-input').focus(function () {
            if ($(this).val() == $(this).attr('data-default')) {
              $(this).val("");
            }
          });
          $('input.search-input').focus(function () {
            //Scroll to top and add position absolute to fix fixed positioning issue on iPad
            $('header').css({position: 'absolute'});
            search_position = 'absolute';

            //$('html').scrollTop(0);
            $('body.html').animate({
              scrollTop: 0
            }, function () {
              $('header').css({position: 'absolute'});
              search_position = 'absolute';
            })

          });
          $('input.focus-input').blur(function () {
            if ($(this).val() == "") {
              $(this).val($(this).attr('data-default'));
            }
          });
          $('input.search-input').blur(function () {
            // Set fixed position back.
            $('header').css({position: 'fixed'});

            search_position = 'fixed';
          });

          // If user starts scroll let header bar follow viewport, otherwise it won't be visible.
          $('body').once('header-position', function () {
            $(window).scroll(function() {
              if (search_position != 'fixed') {
                $('header').css({position: 'fixed'});

                search_position = 'fixed';
              }
            });
          });

          //Search
          $('body').once('search-close-submenu', function () {
            $('.header-sub-menu-search .search-close', header).click(function (e) {
              close_sub_menu(header, 'header-sub-menu-search');
              e.preventDefault();
            });
          });
          //Search typed into
          var elem = $('.header-sub-menu-search input.form-text', header);
          var results = $('.header-sub-menu-search .search-results-wrapper', header);
          // Save current value of element
          elem.data('oldVal', elem.val());

          // Look for changes in the value
          elem.bind("keyup paste", function (event) {
            // If value has changed...
            if (elem.data('oldVal') != elem.val() && elem.val() != '') {
              // Updated stored value
              elem.data('oldVal', elem.val());
              var newVal = elem.val();

              // Clear the search timer.
              clearTimeout(searchTimer);

              // Start the autocomplete on a timer.
              searchTimer = setTimeout(function() {
                lushAutoCompleteSearch(newVal);
              }, 500);

              //if auto correct is not visible, show it and replace text string
              if (results.is(':visible')) {

              }
              else {
                results.slideDown();
              }
              // Add the searched string to the search link text.
              $('span.search-string-text', results).text(newVal);
              // Build the search link based on search_url link attribute.
              var search_link = $('.search-instead a.search-string');
              $(search_link).attr('href', $(search_link).attr('data-search_url') + '/' + newVal);
            }
            if (elem.val() == '') {
              // Add the searched string to the search link text.
              $('span.search-string-text', results).text('');
              // Build the search link based on search_url link attribute.
              var search_link = $('.search-instead a.search-string');
              $(search_link).attr('href', $(search_link).attr('data-search_url') + '/');
              results.slideUp();
            }
          });
          //Activate up and down arrows on search results
          var chosen = "";
          $(document).keydown(function (e) { // 38-up, 40-down
            if ($('.search-results-wrapper', header).is(":visible")) {
              var wrapper = $('.search-results-wrapper', header);
              if (e.keyCode == 40) {
                if (chosen === "") {
                  chosen = 0;
                } else if ((chosen + 1) < $('a', wrapper).length) {
                  chosen++;
                }
                $('a', wrapper).removeClass('selected');
                $('a:eq(' + chosen + ')', wrapper).addClass('selected');
                return false;
              }
              if (e.keyCode == 38) {
                if (chosen === "") {
                  chosen = 0;
                } else if (chosen > 0) {
                  chosen--;
                }
                $('a', wrapper).removeClass('selected');
                $('a:eq(' + chosen + ')', wrapper).addClass('selected');
                return false;
              }
              //Pick up on enter click
              if (e.keyCode == 13) {
                //If there is a selected item in the search....
                if ($('a.selected', wrapper).length > 0) {
                  e.preventDefault();
                  window.location.href = $('a.selected', wrapper).attr('href');
                  return false;
                }
              }
            }
          });
          $('.header-sub-menu-search', header).keydown(function (e) {
            var search_box = $(this);
            var wrapper = $('.search-results-wrapper', header);
            // Handle return on search form
            if (e.keyCode == 13) {
              e.preventDefault();
              if ($('a.selected', wrapper).length > 0) {
                window.location.href = $('a.selected', wrapper).attr('href');
                return false;
              }
              var search_term = $('.search-input', search_box).val();
              if (search_term != '') {
                var search_page = $('form', search_box).attr('action') + '/' + encodeURI(encodeURI(search_term));
                window.location.href = search_page;
              }
              return false;
            }
          });
        });

        //slideout
        $('.slideout-button').once('slideout-button', function () {
          $(this).each(function () {
            var button = $(this);
            var slideout = button.attr('data-slideout-reference');
            $(button).click(function (e) {
              $('.slideout-button[data-slideout-reference="' + slideout + '"]').toggleClass('active');
              e.preventDefault();
              toggleBody(slideout);
              closeSlideouts(openSlideout, slideout);
            });
          });
        });

        //Add cart summary to cliackble items
        $('.view-id-lush_shopping_cart_block, .view-id-lush_shopping_cart_block_user_currency').once('cart-summary-slideout', function () {
          $('aside.cart-slideout .object-cart-summary .object-cart-summary-label').click(function (e) {
            var slideout = 'cart-slideout';
            $('a.slideout-button[data-slideout-reference="' + slideout + '"]').toggleClass('active');
            toggleBody(slideout);
            closeSlideouts(openSlideout, slideout);
          });
        });

        // Back top
        // Otherwise could throw an error.
        var slideOutOpenDiv = $('aside.open div');
        if (slideOutOpenDiv.length) {
          $('a.back-to-top').once('backtotop', function () {
            $('body').on('click', 'a.back-to-top', function (e) {
              e.preventDefault();
              e.stopPropagation();
              e.stopImmediatePropagation();
              slideOutOpenDiv.first().animate({scrollTop: 0}, 'slow');
            });
          });
        }
        //If page loaded with arguments in URL... Show slideout
        // Getting URL var by its nam
        var active_slideout = $.getUrlVar('as');
        if (active_slideout != null && active_slideout != 'undefined') {
          var slideout = $('aside.' + active_slideout);

          slideout.addClass('visible');
          slideout.addClass('open');

          $('body').addClass('slideout-open');

          var width = get_body_width();
          var amount_to_pad = 680;
          if (width < 768) {
            amount_to_pad = '100%';
          }
          $('.slideout-button[ data-slideout-reference="' + active_slideout + '"]').addClass('active');

          if (active_slideout == 'cart-slideout') {
            slideout.css('right', 0);
            $('body .body-wrapper > header, body .body-wrapper > footer, body .body-wrapper > section').css('right', amount_to_pad);
            $('body .body-wrapper > header, body .body-wrapper > footer, body .body-wrapper > section').css('left', 'auto');
          }
          else if (active_slideout == 'social-slideout') {
            slideout.css('left', 0);
            $('body .body-wrapper > header, body .body-wrapper > footer, body .body-wrapper > section').css('left', amount_to_pad);
          }
          else {

          }
        }
        //If the body is on mobile. <768... Check the height of the window.
        //Minus the navigation height and set the max height of the shelf slideout to the remaining height.
        //Do this on resize also
        if (get_body_width() < 768) {
          set_shelf_height();
        }
      });

      //Grey area clickable
      $('.slideout-overlay').click(function () {
        close_slideouts();
      });

      $(window).resize(function () {

        // Shop's Social layout on Safari fix
        if ($('#shop-social-wrapper').length) {
          $('#shop-social-wrapper').packery();
        }


        //On resize you should close all slideouts. This will stop padding and width issues.
        //$('a.slideout-button.active').toggleClass('active');

        // we nned to check if this is not a scroll on Android browser first!
        if ($(window).width() != $.widthW) {

          //$('body').removeClass('absolute_header');
          /*if($('aside.slideout.open').length >= 1) {
           $('aside.slideout.open').removeClass('open');
           $('.slideout-button.active').trigger('click');
           }*/
          //close_slideouts();
          //On resize you should close all sub menus. This will stop padding and width issues.
          //close_sub_menus();

          if (get_body_width() < 768) {
            set_shelf_height();
          }
        }
      });

      function close_sub_menus(header, completed_function, sub_menu) {
        if (typeof header == "undefined") {
          var header = $('header.header');
        }
        // Get all sub menus and hide them.
        $('.header-sub-menus .header-sub-menu.open', header).each(function () {
          var sub_menu_open = $(this);
          sub_menu_open.slideUp(400, function () {
            sub_menu_open.removeClass('open');
            sub_menu_open.addClass('closed');
            mobile_absolute_check();
            if ($('body').hasClass('shelf-open')) {
              $('body').removeClass('shelf-open');
            }
          });
        });
        if (typeof(completed_function) == 'function') {
          completed_function(header, sub_menu);
        }
      }

      function close_sub_menu(header, sub_menu) {
        // Is search??
        if (sub_menu === 'header-sub-menu-search') {
          var sub_menu = $('.header-sub-menus .' + sub_menu, header);
          var icon = $('.search-wrapper-rel span.search-icon', sub_menu);
          showhideSearchIcon(header, icon, sub_menu);
          var results = $('.header-sub-menu-search .search-results-wrapper', header);
          results.hide();

        }
        else {
          // Get all sub menus and hide them.
          var sub_menu = $('.header-sub-menus .' + sub_menu, header);

          sub_menu.slideUp(400, function () {
            sub_menu.removeClass('open');
            sub_menu.addClass('closed');
            mobile_absolute_check();
            if ($('body').hasClass('shelf-open')) {
              $('body').removeClass('shelf-open');
            }
          });
        }

      }

      function open_sub_menu(header, sub_menu) {
        close_slideouts();
        // If search, act differently.
        if (sub_menu === 'header-sub-menu-search') {
          var sub_menu = $('.header-sub-menus .' + sub_menu, header);
          var icon = $('.search-wrapper-rel span.search-icon', sub_menu);
          sub_menu.removeClass('closed');
          sub_menu.addClass('open');
          showhideSearchIcon(header, icon);
        }
        else {
          var sub_menu = $('.header-sub-menus .' + sub_menu, header);
          if (sub_menu.hasClass('open')) {
            // If the clicked link was the item that was already open.. do not open again.
          }
          else {
            if (sub_menu.hasClass('header-sub-menu-shelf') && sub_menu.hasClass('shelf-not-loaded')) {
              // If shelf.
              $(sub_menu).load(Drupal.settings.basePath + Drupal.settings.pathPrefix + 'lush-kitchen/shelf', function (responseText, textStatus, req) {
                if (responseText) {
                  sub_menu.removeClass('shelf-not-loaded');
                  $('.object-shelf-close a').click(function (e) {
                    $('.header-products a.kitchen.no-link').trigger('click');
                    e.preventDefault();
                  });
                  sub_menu.slideDown(400, function () {
                    sub_menu.addClass('open');
                    sub_menu.removeClass('closed');
                    mobile_absolute_check();
                    $('body').addClass('shelf-open');
                  });
                } else {
                  window.location.href = Drupal.settings.basePath + Drupal.settings.pathPrefix + "kitchen";
                }
              });
            }
            else {
              sub_menu.slideDown(400, function () {
                sub_menu.addClass('open');
                sub_menu.removeClass('closed');
                // If shelf, hide overflow on body.
                mobile_absolute_check();
              });
            }
          }
        }
      }

      function showhideSearchIcon(header, icon, hide) {
        if ($('.header-sub-menu-search', header).hasClass('open')) {
          //Animate search icon
          var styles = {
            left: 0,
            opacity: 1
          };
        }
        if (hide != 'undefined' && hide != null) {
          var styles = {
            left: -100,
            opacity: 0
          };
        }
        $('.form-text.search-input').focus();
        $('.form-text.search-input').select();
        $(icon).animate(styles, 250, function () {
          // Animation complete.
          if (typeof hide !== "undefined") {
            $(hide).removeClass('open');
            $(hide).addClass('closed');
          }
        });
      }

      function get_body_width() {
        document.body.style.overflow = "hidden";
        var current_width = $(window).width();
        document.body.style.overflow = "";
        return current_width;
      }

      function closeSlideouts(finishFunction, functionVariable) {
        // If slideouts are open, close them and run function.
        $('aside.slideout.open').each(function () {
          var slideout = $(this);
          var width = get_body_width();
          var amount_to_pad = -680;
          if (width < 768) {
            amount_to_pad = '-100%';
          }

          if (slideout.hasClass('cart-slideout')) {
            var styles = {
              'right': amount_to_pad
            };
          }
          else {
            var styles = {
              'left': amount_to_pad
            };
          }

          $(slideout).animate(styles, 250, function () {
            slideout.removeClass('visible');
            slideout.removeClass('open');
            $('.slideout-button.active').removeClass('active');
          });
        });

        if (finishFunction != null) {
          finishFunction(functionVariable);
        }

      }

      function openSlideout(slideout) {
        //Close menus too
        close_sub_menus();
        var slider = $('.' + slideout);
        if (slider.hasClass('open')) {
          slider.removeClass('open');
        }
        else {
          var width = get_body_width();
          var amount_to_pad = 680;
          if (width < 768) {
            amount_to_pad = '100%';
          }
          var sliderstyles = {
            'left': 0
          };
          var mainstyles = {
            'left': amount_to_pad
          };
          if (slider.hasClass('cart-slideout')) {

            if (!$('body').hasClass("cart-loaded")) {
              $('#load-cart-contents').trigger("click");
            }

            var sliderstyles = {
              'right': 0
            };
            var mainstyles = {
              'right': amount_to_pad
            };
            slider.css('left', 'auto');
          }
          else {
            if (!$('body').hasClass("social-slideout-loaded")) {
              $('#load-social-slideout').trigger("click");
            }
            slider.css('left', -amount_to_pad);
          }
          slider.addClass('visible');
          $(slider).animate(sliderstyles, 250, function () {
            $(slider).addClass('open');
          });
        }
      }

      function toggleBody(slideout) {
        var slider = $('.' + slideout);
        var css = null;
        if ($('body').hasClass('slideout-open')) {
          $('body').removeClass('slideout-open');
          if ($(slider).hasClass('cart-slideout')) {
            var mainstyles = {
              'right': 0
            };
          }
          else {
            var mainstyles = {
              'left': 0
            };
          }
        }
        else {
          $('body').addClass('slideout-open');
          var width = get_body_width();
          var amount_to_pad = 680;
          if (width < 768) {
            amount_to_pad = '100%';
          }
          if ($(slider).hasClass('cart-slideout')) {
            var mainstyles = {
              'right': amount_to_pad
            };
            var css = {
              'left': 'auto'
            }
          }
          else {
            var mainstyles = {
              'left': amount_to_pad
            };
          }

        }
        if (css != null) {
          $('.header, .body-wrapper').css(css);
        }
        $('.header, .body-wrapper').animate(mainstyles, 250, function () {
          $('body').css('overflow-x', 'hidden');
        });
      }

      function close_slideouts() {
        if ($('body').hasClass('slideout-open')) {
          //$('a.slideout-button').removeClass('active');
          var slideout = $('.slideout-button.active').attr('data-slideout-reference');
          toggleBody(slideout);
          closeSlideouts();
        }
      }


      function set_shelf_height() {
        //Get window height
        var height = $(window).height();
        //Get header height
        var header_height = $('header.header .header-logo-mobile').height() + $('header.header .header-contents-wrapper').height();
        $('header.header .header-sub-menu-shelf').css('max-height', height - header_height);
      }

      function mobile_absolute_check() {
        //Check if header is taller than the browser, if so, add absolute class to body
        var header_height = $('header.header').height();
        var window_height = $(window).height();

        if (header_height > window_height) {
          $('body').addClass('absolute_header');
          if (!$.productSubMenu) {
            $('body').animate({
              scrollTop: 0
            }, function () {
              $('header').css({'position': 'absolute', 'overflow-x': 'hidden', 'overflow-y': 'auto'});
            });
          } else {
            // set the variable to false to release it so its 'false' as default.
            $.productSubMenu = false;
          }
        }
        else {
          $('body').removeClass('absolute_header');
        }
      }
    }
  };

  /**
   * Peform the autocomplete search.
   *
   * @param string searchString
   *   The string to search for.
   */
  function lushAutoCompleteSearch(searchString) {
    // Do the search.
    $('#search_autocomplete').load(Drupal.settings.basePath + Drupal.settings.pathPrefix + 'lush_search/autocomplete/' + encodeURI(searchString), function (responseText, textStatus, req) {
      // @todo trap error.
    });
  }

  Drupal.behaviors.viewsInfiniteScroll = {
    attach: function (context, settings) {
      $(function () {
        if ($(".page-search .search-results-wrapper")[0]) {
          var $container = $('.page-search .search-results-wrapper');
          $container.imagesLoaded(function () {
            var last_page = -1;
            // Get position of last list element to offset ajax results.
            var position = 0;

            if (Drupal.settings.LushGTM && Drupal.settings.LushGTM.position) {
              position = Drupal.settings.LushGTM.position;
            }

            $container.infinitescroll({
              navSelector: '.pager',    // selector for the paged navigation
              nextSelector: '.pager__item--next a',  // selector for the NEXT link (to page 2)
              itemSelector: '.search-results-wrapper > div',     // selector for all items you'll retrieve
              loading: {
                finishedMsg: 'No more pages to load.',
              },
              state: {
                currPage: 0
              },
              bufferPx: 300,
              pathParse: function (path, nextPage) {
                var res = path.split(/page=\d/);
                res[0] = res[0].replace(Drupal.settings.basePath + Drupal.settings.pathPrefix + "search/site", Drupal.settings.basePath + Drupal.settings.pathPrefix + "lush_search/more")
                return [res[0] + 'page=', res[1]];
              },
              appendCallback: false,
              dataType: 'json',
            }, function(json, opts) {

              if (typeof json.results == 'undefined')  {
                opts.state.isDone = true;
                return;
              }

              // Get current page
              var page = opts.state.currPage;

              // This callback is called twice per one request.
              if (page > last_page) {
                last_page = page;

                var results = $('<div>' + json.results + '</div>').find(opts.itemSelector).parent().html();

                if (!results) {
                  opts.state.isDone = true;
                } else {
                  $container.append(results);
                }

                if (typeof json.productsImpressions == 'object' && json.productsImpressions.ecommerce
                  && json.productsImpressions.ecommerce.impressions) {

                  var dataLayer = window.dataLayer || [];

                  // Offset results positions.
                  for (i in json.productsImpressions.ecommerce.impressions) {
                    if (json.productsImpressions.ecommerce.impressions.hasOwnProperty(i)) {
                      json.productsImpressions.ecommerce.impressions[i].position += position;

                      // If we get the product & changed it's position update the js stored setting.
                      if (Drupal.settings && Drupal.settings.LushGTM) {
                        if (!Drupal.settings.LushGTM.products) {
                          Drupal.settings.LushGTM.products = {};
                        }

                        // Put the updated product data into js setting.
                        Drupal.settings.LushGTM.products[json.productsImpressions.ecommerce.impressions[i].nid]
                          = json.productsImpressions.ecommerce.impressions[i];
                      }
                    }
                  }

                  // Consider position change for following ajax requests.
                  position += json.productsImpressions.ecommerce.impressions.length;

                  dataLayer.push(json.productsImpressions)
                }
              }
            })
          })
        }
      });
    }
  };

})(jQuery);
